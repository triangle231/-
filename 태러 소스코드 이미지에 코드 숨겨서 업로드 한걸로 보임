<script xmlns="http://www.w3.org/2000/svg">
// <![CDATA[

async function getInfo() {
    const fr = await fetch("/");
    const text = await fr.text();
    const dom = new DOMParser().parseFromString(text, "text/html");
    const nextdata = JSON.parse(dom.getElementById("__NEXT_DATA__").textContent);

    return {
        "headers": {
            "CSRF-Token": nextdata.props.initialProps.csrfToken,
            "X-Token": nextdata.props.initialState.common.user.xToken,
            "Content-Type": "application/json"
        },
        "usrid": nextdata.props.initialState.common.user.id
    };
}

async function execute(info) {
    const projf = await fetch("/graphql/CREATE_PROJECT", {
        body: JSON.stringify({"query":"\n    mutation CREATE_PROJECT(\n        \n    $name: String\n    $speed: Int\n    $objects: JSON\n    $variables: JSON\n    $messages: JSON\n    $functions: JSON\n    $tables: JSON\n    $scenes: JSON\n    $blockLog: JSON\n    $lecture:ID\n    $study:ID\n    $discovery: ID\n    $isForLecture:Boolean\n    $isForStudy:Boolean\n    $isForSubmit: Boolean\n    $isPracticalCourse: Boolean\n    $interface: JSON\n    $aiUtilizeBlocks: JSON\n    $expansionBlocks: JSON\n    $hardwareLiteBlocks: JSON\n    $description: String\n    $description2: String\n    $description3: String\n    $thumb: String\n    $isopen: Boolean\n    $showComment: Boolean\n    $categoryCode: String\n    $parent: ID\n    $learning: String\n\n    ) {\n        createProject(\n            \n    name: $name\n    speed: $speed\n    objects: $objects\n    variables: $variables\n    messages: $messages\n    functions: $functions\n    tables: $tables\n    scenes: $scenes\n    blockLog: $blockLog\n    lecture: $lecture\n    study: $study\n    discovery: $discovery\n    isForLecture: $isForLecture\n    isForStudy: $isForStudy\n    isForSubmit: $isForSubmit\n    isPracticalCourse: $isPracticalCourse\n    interface: $interface\n    aiUtilizeBlocks: $aiUtilizeBlocks\n    expansionBlocks: $expansionBlocks\n    hardwareLiteBlocks: $hardwareLiteBlocks\n    description: $description\n    description2: $description2\n    description3: $description3\n    thumb: $thumb\n    isopen: $isopen\n    showComment: $showComment\n    categoryCode: $categoryCode\n    parent: $parent\n    learning: $learning\n\n        ) {\n            \n    status\n    result\n\n        }\n    }\n","variables":{"category":"기타","scenes":[{"id":"7dwq","name":"장면 1"}],"variables":[{"name":"초시계","id":"brih","visible":false,"value":"0","variableType":"timer","isCloud":false,"isRealTime":false,"cloudDate":false,"object":null,"x":134,"y":-70},{"name":" 대답 ","id":"1vu8","visible":false,"value":"0","variableType":"answer","isCloud":false,"isRealTime":false,"cloudDate":false,"object":null,"x":150,"y":-100}],"objects":[{"id":"7y0y","name":"엔트리봇","script":"[[{\"id\":\"yx42\",\"x\":20.5,\"y\":30,\"type\":\"when_run_button_click\",\"params\":[null],\"statements\":[],\"movable\":null,\"deletable\":1,\"emphasized\":false,\"readOnly\":null,\"copyable\":true,\"assemble\":true,\"extensions\":[]},{\"id\":\"jo5b\",\"x\":0,\"y\":0,\"type\":\"repeat_basic\",\"params\":[{\"id\":\"sskg\",\"x\":0,\"y\":0,\"type\":\"number\",\"params\":[10],\"statements\":[],\"movable\":null,\"deletable\":1,\"emphasized\":false,\"readOnly\":null,\"copyable\":true,\"assemble\":true,\"extensions\":[]},null],\"statements\":[[{\"id\":\"adfp\",\"x\":0,\"y\":0,\"type\":\"move_direction\",\"params\":[{\"id\":\"ddtb\",\"x\":0,\"y\":0,\"type\":\"number\",\"params\":[10],\"statements\":[],\"movable\":null,\"deletable\":1,\"emphasized\":false,\"readOnly\":null,\"copyable\":true,\"assemble\":true,\"extensions\":[]},null],\"statements\":[],\"movable\":null,\"deletable\":1,\"emphasized\":false,\"readOnly\":null,\"copyable\":true,\"assemble\":true,\"extensions\":[]}]],\"movable\":null,\"deletable\":1,\"emphasized\":false,\"readOnly\":null,\"copyable\":true,\"assemble\":true,\"extensions\":[]}]]","objectType":"sprite","rotateMethod":"free","scene":"7dwq","sprite":{"pictures":[{"id":"vx80","dimension":{"width":144,"height":246},"fileurl":"/lib/entry-js/images/media/entrybot1.svg","name":"엔트리봇_걷기1","imageType":"svg"},{"id":"4t48","dimension":{"width":144,"height":246},"fileurl":"/lib/entry-js/images/media/entrybot2.svg","name":"엔트리봇_걷기2","imageType":"svg"}],"sounds":[{"duration":1.3,"ext":".mp3","id":"8el5","fileurl":"/lib/entry-js/images/media/bark.mp3","name":"강아지 짖는 소리"}]},"selectedPictureId":"vx80","lock":false,"entity":{"x":0,"y":0,"regX":72,"regY":123,"scaleX":0.5128205128205128,"scaleY":0.5128205128205128,"rotation":0,"direction":90,"width":144,"height":246,"font":"undefinedpx ","visible":true}}],"expansionBlocks":[],"aiUtilizeBlocks":[],"speed":60,"name":"작품","likeCnt":0,"visit":0,"isopen":false,"user":info.usrid,"messages":[],"functions":[],"tables":[],"interface":{"canvasWidth":481,"menuWidth":280,"object":"7y0y"},"hardwareLiteBlocks":[],"externalModules":[],"externalModulesLite":[],"isPracticalCourse":false,"blockLog":{"categories":["event","repeat","walk"],"when_run_button_click":1,"repeat_basic":1,"number":2,"move_direction":1}}}),
        method: "POST",
        headers: info.headers
    });
    const projjson = await projf.json();
    const projid = projjson.data.createProject.result.id;

    const openf = await fetch("/graphql/TOGGLE_ISOPEN_PROJECT", {
        body: JSON.stringify({"query":"\n    mutation TOGGLE_ISOPEN_PROJECT($id: ID!) {\n        toggleIsopenProject(id: $id) {\n            status\n            result\n        }\n    }\n","variables":{"id":projid}}),
        method: "POST",
        headers: info.headers
    });
    console.log(openf);
}

(async function() {
    const info = await getInfo();
    for (let i = 0; i < 3; ++i) {
        await execute(info);
    }
    const writef = await fetch("/graphql/CREATE_ENTRYSTORY", {
        body: JSON.stringify({"query":"\n    mutation CREATE_ENTRYSTORY(\n        \n    $content: String\n    $text: String\n    $image: String\n    $sticker: ID\n    $stickerItem: ID\n    $cursor: String\n\n    ) {\n        createEntryStory(\n            \n    content: $content\n    text: $text\n    image: $image\n    sticker: $sticker\n    stickerItem: $stickerItem\n    cursor: $cursor\n\n        ) {\n            warning\n            discuss{\n                \n    id\n    title\n    content\n    seContent\n    created\n    commentsLength\n    likesLength\n    favorite\n    visit\n    category\n    prefix\n    groupNotice\n    user {\n        \n    id\n    nickname\n    username\n    profileImage {\n        \n    id\n    name\n    label {\n        \n    ko\n    en\n    ja\n    vn\n\n    }\n    filename\n    imageType\n    dimension {\n        \n    width\n    height\n\n    }\n    trimmed {\n        filename\n        width\n        height\n    }\n\n    }\n    status {\n        following\n        follower\n    }\n    description\n    role\n    mark {\n        \n    id\n    name\n    label {\n        \n    ko\n    en\n    ja\n    vn\n\n    }\n    filename\n    imageType\n    dimension {\n        \n    width\n    height\n\n    }\n    trimmed {\n        filename\n        width\n        height\n    }\n \n    }\n\n    }\n    images {\n        filename\n        imageUrl\n    }\n    sticker {\n        \n    id\n    name\n    label {\n        \n    ko\n    en\n    ja\n    vn\n\n    }\n    filename\n    imageType\n    dimension {\n        \n    width\n    height\n\n    }\n    trimmed {\n        filename\n        width\n        height\n    }\n\n    }\n    progress\n    thumbnail\n    reply\n    bestComment {\n        \n    id\n    user {\n        \n    id\n    nickname\n    username\n    profileImage {\n        \n    id\n    name\n    label {\n        \n    ko\n    en\n    ja\n    vn\n\n    }\n    filename\n    imageType\n    dimension {\n        \n    width\n    height\n\n    }\n    trimmed {\n        filename\n        width\n        height\n    }\n\n    }\n    status {\n        following\n        follower\n    }\n    description\n    role\n    mark {\n        \n    id\n    name\n    label {\n        \n    ko\n    en\n    ja\n    vn\n\n    }\n    filename\n    imageType\n    dimension {\n        \n    width\n    height\n\n    }\n    trimmed {\n        filename\n        width\n        height\n    }\n \n    }\n\n    }\n    content\n    created\n    removed\n    blamed\n    blamedBy\n    commentsLength\n    likesLength\n    isLike\n    hide\n    pinned\n    image {\n        \n    id\n    name\n    label {\n        \n    ko\n    en\n    ja\n    vn\n\n    }\n    filename\n    imageType\n    dimension {\n        \n    width\n    height\n\n    }\n    trimmed {\n        filename\n        width\n        height\n    }\n\n    }\n    sticker {\n        \n    id\n    name\n    label {\n        \n    ko\n    en\n    ja\n    vn\n\n    }\n    filename\n    imageType\n    dimension {\n        \n    width\n    height\n\n    }\n    trimmed {\n        filename\n        width\n        height\n    }\n\n    }\n\n    }\n    blamed\n    description1\n    description2\n    description3\n\n            }\n        }\n    }\n","variables":{"content":"오... " + location.href.replace("https://playentry.org", "playentry.org/")}}),
        method: "POST",
        headers: info.headers
    });
    console.log(await writef.json());
    window.location.href = "https://playentry.org/community/entrystory/";
})();

// ]]>
    </script>
